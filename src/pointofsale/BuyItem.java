/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pointofsale;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author shah
 */
public class BuyItem extends javax.swing.JFrame {

    /**
     * Creates new form BuyItem
     */
    public BuyItem() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CodeField = new javax.swing.JTextField();
        quantityField = new javax.swing.JTextField();
        addToBillbtn = new javax.swing.JButton();
        printbtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buy Item");
        setMinimumSize(null);
        setPreferredSize(new java.awt.Dimension(400, 350));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Enter code");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(70, 80, 90, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Enter quantity");
        jLabel2.setToolTipText("");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(70, 140, 100, 30);

        CodeField.setToolTipText("Enter code of the product from the table of items");
        CodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodeFieldActionPerformed(evt);
            }
        });
        getContentPane().add(CodeField);
        CodeField.setBounds(190, 90, 150, 30);

        quantityField.setToolTipText("Enter the quantity you want to buy of item");
        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });
        getContentPane().add(quantityField);
        quantityField.setBounds(190, 140, 150, 30);

        addToBillbtn.setText("Add");
        addToBillbtn.setToolTipText("Add item to bill");
        addToBillbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToBillbtnActionPerformed(evt);
            }
        });
        getContentPane().add(addToBillbtn);
        addToBillbtn.setBounds(70, 200, 90, 30);

        printbtn.setText("Print");
        printbtn.setToolTipText("Print bill");
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });
        getContentPane().add(printbtn);
        printbtn.setBounds(230, 200, 90, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("ADD ITEM TO BILL");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(110, 40, 210, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pointofsale/BuyItem.jpg"))); // NOI18N
        jButton1.setText("jButton1");
        getContentPane().add(jButton1);
        jButton1.setBounds(0, 0, 430, 380);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodeFieldActionPerformed
        
    }//GEN-LAST:event_CodeFieldActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void addToBillbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToBillbtnActionPerformed
        String code=CodeField.getText();
        String quantity=quantityField.getText();
        String name = null,unitprice = null;
        ArrayList<String> itemArrayList=new ArrayList<>();
    
        String file="D:\\java\\PointOfSale\\src\\pointofsale\\item.txt";
        BufferedReader br = null;
        
        try 
        {
            br = new BufferedReader(new FileReader(file));
        } 
        catch (FileNotFoundException ex) 
        {
            Logger.getLogger(SecondPage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        String line;
        
        try 
        {
            while((line=br.readLine())!=null){
                itemArrayList.add(line);
            }
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(SecondPage.class.getName()).log(Level.SEVERE, null, ex);
        }
                
ArrayList<String> al = new ArrayList<String>();
int j=2;        
for(int i=0;i<itemArrayList.size();){
    if(code.equals(itemArrayList.get(j))){
        name=itemArrayList.get(i++);
        unitprice=itemArrayList.get(i++);
        i++;
        i++;
        
//    al.add(itemArrayList.get(i++)+","+itemArrayList.get(i++)+","+itemArrayList.get(i++)+","+itemArrayList.get(i++));
    j++;
    j++;
    j++;
    j++;
    }
    else{
        i++;
        i++;
        i++;
        i++;
        j++;
        j++;
        j++;
        j++;
    }
}
       
File itemm=new File("D:\\java\\PointOfSale\\src\\pointofsale\\bill.txt");
BufferedReader br1 = null;
        ArrayList<String> array=new ArrayList<>();
        try 
        {
            
            br1 = new BufferedReader(new FileReader(itemm));
        
        } 
        catch (FileNotFoundException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        String line1;
        try
        {
            while((line1=br1.readLine())!=null){
                array.add(line1);
            }
        }
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileWriter fw = null;
        try
        {
            fw = new FileWriter(itemm);
        }
        catch (IOException ex) {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bw=new BufferedWriter(fw);
        for(int i=0;i<array.size();i++){
            try 
            {
                bw.write(array.get(i));
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
            }
            try 
            {
                bw.newLine();
            } 
            catch (IOException ex) 
            {
                Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try 
        {
            bw.write(name);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.newLine();
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.write(unitprice);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.newLine();
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.write(code);
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.newLine();
        }
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.write(quantity);
        }
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try 
        {
            bw.close();
            
//        new tableOfItem(al);
        }
        catch (IOException ex) 
        {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList<String> itemArrayList1=new ArrayList<>();
    
        String file1="D:\\java\\PointOfSale\\src\\pointofsale\\bill.txt";
        BufferedReader br11 = null;
        
        try {
            br11 = new BufferedReader(new FileReader(file1));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SecondPage.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        String line11;
        
        try {
            while((line11=br11.readLine())!=null){
                itemArrayList1.add(line11);
            }
        } catch (IOException ex) {
            Logger.getLogger(SecondPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        ArrayList<String> al1 = new ArrayList<String>();
for(int i=0;i<itemArrayList1.size();){
    
    al1.add(itemArrayList1.get(i++)+","+itemArrayList1.get(i++)+","+itemArrayList1.get(i++)+","+itemArrayList1.get(i++));
        
}
        tableOfItem tableBill=new tableOfItem(al1);
        tableBill.setBounds(850, 0, 400, 350);
//        addToBillbtn.setLabel("Added");
    }//GEN-LAST:event_addToBillbtnActionPerformed

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
        Print print = null;
        try {
            print = new Print();
        } catch (IOException ex) {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
//        getContentPane().add(jLabel1);
        
        print.setVisible(true);
        File itemm=new File("D:\\java\\PointOfSale\\src\\pointofsale\\bill.txt");
        FileWriter fw = null;
        try {
            fw = new FileWriter(itemm);
        } catch (IOException ex) {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedWriter bw=new BufferedWriter(fw);
        try {
            fw.write("");
        } catch (IOException ex) {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(BuyItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuyItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuyItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuyItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CodeField;
    private javax.swing.JButton addToBillbtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton printbtn;
    private javax.swing.JTextField quantityField;
    // End of variables declaration//GEN-END:variables
}
